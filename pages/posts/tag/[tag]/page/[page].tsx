import Head from 'next/head'
import { getAllPosts, getAllTags, getNumberOfPage, getNumberOfPagesByTag, getPostsByPage, getPostsByTagAndPage, getPostsForTopPage } from '../../../../../lib/notionAPI'
import SinglePost from '../../../../../components/Post/SinglePost';
import { GetStaticPaths, GetStaticProps, GetStaticPropsContext } from 'next';
import { NotionApiCustomPost } from '../../../../../common/commonType';
import Pagination from '../../../../../components/Pagination/Pagination';

interface HomeProps {
    allPosts: NotionApiCustomPost[],
    postsByTag: NotionApiCustomPost[],
    numberOfPage: number,
}

export const getStaticPaths: GetStaticPaths = async () => {
    const tags = getAllTags();

    const numberOfPageByTag = await getNumberOfPagesByTag('Blog');

    /**
     *  [
            { params: { tag: 'blog', page: '1' },
            { params: { tag: 'blog', page: '2' },
            { params: { tag: 'blog', page: '3' },
            ......
        ],
     */
    let params = [];
    for (let i = 1; i <= numberOfPageByTag; i++) {
        params.push({ params: { tag: 'Blog', page: i.toString() } })

    }
    // console.log(params);


    return {
        paths: [{ params: { tag: 'blog', page: '1' } },],
        fallback: 'blocking'
    }
}

// SSG
export const getStaticProps: GetStaticProps = async (context: GetStaticPropsContext) => {
    const currentPage = context.params?.page?.toString();

    const currentTag = context.params?.tag?.toString();

    const upperCaseCurrentTag =
        currentTag?.charAt(0).toUpperCase() + currentTag!.slice(1);

    const postsByTag = await getPostsByTagAndPage(
        upperCaseCurrentTag,
        parseInt(currentPage!, 10)
    );

    return {
        props: {
            postsByTag,
        },
        // ISR 60秒毎に再更新する。※今回は6時間毎
        revalidate: 60 * 60 * 6,
    }
}

const BlogTagPageList: React.FC<HomeProps> = ({ postsByTag, numberOfPage }: HomeProps) => {

    return (
        <>
            <div className="container h-full w-full mx-auto">
                <Head >
                    <title>Notion-Blog</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className="container w-full mt-16">
                    <h1 className="text-5xl font-medium text-center mb-16">Notion Blog 📒</h1>
                    <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
                        {postsByTag.map((post) => (
                            <div key={post.id}>
                                <SinglePost
                                    id={post.id}
                                    title={post.title}
                                    description={post.description}
                                    date={post.date}
                                    tags={post.tags}
                                    slug={post.slug}
                                    isPaginationPage={true}
                                />
                            </div>
                        ))}
                    </section>
                    <Pagination numberOfPage={numberOfPage} />
                </main>
            </div>
        </>
    )
}

export default BlogTagPageList;